#!/bin/sh

# Check that ocamlfind is present as the Makefile assumes this
if [ ! which ocamlfind > /dev/null 2>&1 ]; then
  echo "Mezzo requires ocamlfind";
  exit 255
fi

# Find out where Firefox is located on OSX
has_firefox=true
if [ $(uname) = "Darwin" ]; then
  app=$(ls /Applications/ | \grep Firefox | head -n 1)
  if [ x$app == x"" ]; then
    echo "No Firefox, support for -explain html disabled"
    has_firefox=false
  else
    echo "Found Firefox in /Applications/$app"
    firefox=$(basename $app .app)
  fi;
else
  firefox=$(which firefox)
  if [ $? -ne 0 ]; then
    echo "No Firefox, support for -explain html disabled"
    has_firefox=false
  else
    echo "Found firefox as $firefox"
  fi;
fi

echo "found ocamlfind, good"

libdir=$(pwd)
srcdir=$(pwd)
install=true
while : ; do
  case "$1" in
    "")
      break;;

    --local)
      install=false;;
  esac
  shift;
done

if $install ; then
  libdir=$(ocamlfind printconf destdir)/mezzo
fi

echo "(* This file is auto-generated by the configure script *)" > configure.ml
echo "# This file is auto-generated by the configure script" > Makefile.config

# Mezzo needs to know where the corelib and stdlib directories can be found
echo "let lib_dir = \"$libdir\";;" >> configure.ml
echo "let src_dir = \"$srcdir\";;" >> configure.ml
echo "let has_firefox = $has_firefox;;" >> configure.ml
echo "let firefox = \"$firefox\";;" >> configure.ml

if $install; then
  echo "let local = false;;" >> configure.ml
  echo "This is a SYSTEM installation"
else
  echo "let local = true;;" >> configure.ml
  echo "This is a LOCAL installation"
fi

echo "LIBDIR = \"$libdir\"" >> Makefile.config
echo "SRCDIR = \"$srcdir\"" >> Makefile.config

echo "libdir is $libdir"
echo "srcdir is $srcdir"

# Detect the GNU utilities
function gnudetect () {
  name=$(echo $1 | tr '[:lower:]' '[:upper:]')
  if which g$1 > /dev/null 2>&1 ; then
    echo "$1 found as g$1"
    echo "$name := g$1" >> Makefile.config
  else
    echo "$1 found as $1"
    echo "$name := $1" >> Makefile.config
  fi
}

gnudetect "sed"
gnudetect "find"
gnudetect "time"

echo "... configure done."
