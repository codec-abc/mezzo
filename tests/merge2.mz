
data mutable t = T
data u = U { left: t; right: t }

(* Un exemple plus sophistiqué où l'on cherche à conserver le partage dans
   l'environnement de retour. On obtient

   ∃(? : value). v2 @ U { left = ?; right = ? } ∗ ? @ T
*)
val v2 =
  if explain True then begin
    let x = T in
    U { left = x; right = x }
  end else begin
    let z = T in
    let y = T in
    U { left = y; right = y }
  end
